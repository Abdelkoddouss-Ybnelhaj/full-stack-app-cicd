name: 'Infra'

on:
  pull_request:
    branches: [ "master" ]
    paths: 
      - "infra/**"

permissions:
  contents: read

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Set GOOGLE_APPLICATION_CREDENTIALS environment variable
        run: |
          echo '${{ secrets.GCP_SVC_KEY }}' > $HOME/gcp_key.json
          chmod 644 $HOME/gcp_key.json  # Ensure proper permissions

      - name: Set Public key environment variable
        run: |
          echo '${{ secrets.PUBLIC_KEY }}' > $HOME/my_google_key.pub
          chmod 644 $HOME/my_google_key.pub  # Ensure proper permissions

      - name: Set up the private key
        run: echo "${{ secrets.PRIVATE_KEY }}" > $HOME/my_google_key && chmod 600 $HOME/my_google_key  && ls

      - name: Initialize Terraform
        run: terraform -chdir=infra/terraform init

      - name: Format Terraform files (Auto-fix)
        run: terraform -chdir=infra/terraform fmt

      - name: Validate Terraform configuration
        run: terraform -chdir=infra/terraform validate

      - name: Check Terraform formatting (After Auto-fix)
        run: terraform -chdir=infra/terraform fmt -check

      - name: Plan Terraform Deployment
        run: terraform -chdir=infra/terraform plan 

      - name: Apply Terraform Deployment
        run: terraform -chdir=infra/terraform apply

      - name: Get Terraform Output (VM IP)
        run: |
          VM_IP=$(terraform -chdir=infra/terraform output -raw vm_ip)
          echo "[web_servers]" > infra/ansible/inventory.ini
          echo "$VM_IP ansible_user=abdelkdoussebelhaje ansible_ssh_private_key_file=$HOME/my_google_key" >> infra/ansible/inventory.ini

      - name: Install Ansible
        run: sudo apt update && sudo apt install -y ansible

      - name: Run Ansible Playbook
        run: |
          cd infra/ansible
          ansible-playbook -i inventory.ini docker_setup.yml

      - name: Cleanup Google Cloud credentials
        if: always()
        run: rm -f $HOME/gcp_key.json
